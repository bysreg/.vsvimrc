set nocompatible              " be iMproved, required
filetype off                  " required

" This is for syntax highlighting
if !exists("g:syntax_on")
	syntax enable " https://stackoverflow.com/questions/33380451/is-there-a-difference-between-syntax-on-and-syntax-enable-in-vimscript
endif

let mapleader=","

set shiftwidth=4
set tabstop=4

set number
set relativenumber

" for searching
set hlsearch
set incsearch " enable incremental search
set ic " defaults to ignore case
set smartcase " search will be case sensitive if search pattern contains upper case character
nnoremap <esc> :noh<return><esc> 

"ignore files in the build folder
set wildignore+=*\\build\\*,*\\bin\\*,*\\build_win_clang\\* " for windows
set wildignore+=*/build/*,*/bin/*,*/build_win_clang/* " for linux

" line warp options
set breakindent " wrapped line appears in with the same indent
set breakindentopt=shift:4

set cursorline " highlight cursor's current line
set noswapfile

set noerrorbells
set belloff=all 
set vb t_vb=

set pastetoggle=<F3>

let s:comment_map = { 
    \   "c": '\/\/',
    \   "cpp": '\/\/',
    \   "go": '\/\/',
    \   "java": '\/\/',
    \   "javascript": '\/\/',
    \   "lua": '--',
    \   "scala": '\/\/',
    \   "php": '\/\/',
    \   "python": '#',
    \   "ruby": '#',
    \   "rust": '\/\/',
    \   "sh": '#',
    \   "desktop": '#',
    \   "fstab": '#',
    \   "conf": '#',
    \   "profile": '#',
    \   "bashrc": '#',
    \   "bash_profile": '#',
    \   "mail": '>',
    \   "eml": '>',
    \   "bat": 'REM',
    \   "ahk": ';',
    \   "vim": '"',
    \   "tex": '%',
    \ }

function! ToggleComment()
    if has_key(s:comment_map, &filetype)
        let comment_leader = s:comment_map[&filetype]
        if getline('.') =~ "^\\s*" . comment_leader . " " 
            " Uncomment the line
            execute "silent s/^\\(\\s*\\)" . comment_leader . " /\\1/"
        else 
            if getline('.') =~ "^\\s*" . comment_leader
                " Uncomment the line
                execute "silent s/^\\(\\s*\\)" . comment_leader . "/\\1/"
            else
                " Comment the line
                execute "silent s/^\\(\\s*\\)/\\1" . comment_leader . " /"
            end
        end
    else
        echo "No comment leader found for filetype"
    end
endfunction

set clipboard=unnamed

nnoremap <leader><Space> :call ToggleComment()<cr>
vnoremap <leader><Space> :call ToggleComment()<cr>
